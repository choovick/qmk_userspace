// !!! DO NOT ADD #pragma once !!! //

RGB_MATRIX_EFFECT(base_effect)
RGB_MATRIX_EFFECT(layer_1_effect)
RGB_MATRIX_EFFECT(layer_2_effect)
RGB_MATRIX_EFFECT(layer_3_effect)
RGB_MATRIX_EFFECT(layer_4_effect)

#ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS

/* shorthand MYRGB_ colors */
#define RED       0xFF, 0x00, 0x00 // Red
#define ORA       0xFF, 0x7F, 0x00 // Orange
#define YEL       0xFF, 0xFF, 0x00 // Yellow **
#define LIM       0x7F, 0xFF, 0x00 // Lime
#define GRN       0x00, 0xFF, 0x00 // Green **
#define SPR       0x00, 0xFF, 0x7F // Spring Green *
#define CYA       0x00, 0xFF, 0xFF // Cyan *
#define AZU       0x00, 0x7F, 0xFF // Azure **
#define BLU       0x00, 0x00, 0xFF // Blue *
#define IND       0x7F, 0x00, 0xFF // Indigo **
#define MAG       0xFF, 0x00, 0xFF // Magenta *
#define PIN       0xFF, 0x00, 0x7F // Pink **
#define WHI       0xFF, 0xFF, 0xFF // White **
#define BLK       0x00, 0x00, 0x00 // Black


struct RGB_key {
    uint8_t r;
    uint8_t g;
    uint8_t b;
};

struct RGB_key base_rgb[56] = {
    // Left half
    // ╭─────────────────────────────────────────────────────────────────────────────────╮
          [0]={WHI},    [7]={CYA},    [8]={CYA},    [15]={CYA},   [16]={CYA},   [20]={CYA},
    // ├─────────────────────────────────────────────────────────────────────────────────┤
          [1]={BLU},    [6]={AZU},    [9]={AZU},    [14]={AZU},   [17]={AZU},   [21]={AZU},
    // ├─────────────────────────────────────────────────────────────────────────────────┤
          [2]={RED},    [5]={AZU},   [10]={AZU},    [13]={AZU},   [18]={AZU},   [22]={AZU},
    // ├─────────────────────────────────────────────────────────────────────────────────┤
          [3]={GRN},    [4]={AZU},   [11]={AZU},    [12]={AZU},   [19]={AZU},   [23]={AZU},
    // Right half
    // ╭─────────────────────────────────────────────────────────────────────────────────╮
         [49]={CYA},   [45]={CYA},   [44]={CYA},   [37]={CYA},   [36]={CYA},   [29]={WHI},
    // ├─────────────────────────────────────────────────────────────────────────────────┤
         [50]={AZU},   [46]={AZU},   [43]={AZU},   [38]={AZU},   [35]={AZU},   [30]={BLU},
    // ├─────────────────────────────────────────────────────────────────────────────────┤
         [51]={AZU},   [47]={AZU},   [42]={AZU},   [39]={AZU},   [34]={BLU},   [31]={BLU},
    // ├─────────────────────────────────────────────────────────────────────────────────┤
         [52]={AZU},   [48]={AZU},   [41]={BLU},   [40]={BLU},   [33]={BLU},   [32]={GRN},
    // Thumb cluster left and right
    // ╰─────────────────────────────────────────────────────────────────────────────────╯
         [26]={AZU},   [27]={BLU},   [28]={YEL},/**/[53]={WHI},   [54]={AZU},
                       [25]={RED},   [24]={CYA},/**/[55]={CYA},
};

// Mouse/mod layer
struct RGB_key layer_1_rgb[56] = {
    // Left half
    // ╭─────────────────────────────────────────────────────────────────────────────────╮
          [0]={CYA},    [7]={MAG},    [8]={MAG},    [15]={MAG},   [16]={MAG},   [20]={MAG},
    // ├─────────────────────────────────────────────────────────────────────────────────┤
          [1]={BLU},    [6]={BLU},    [9]={YEL},    [14]={ORA},   [17]={WHI},   [21]={WHI},
    // ├─────────────────────────────────────────────────────────────────────────────────┤
          [2]={RED},    [5]={IND},   [10]={IND},    [13]={BLU},   [18]={BLU},   [22]={BLU},
    // ├─────────────────────────────────────────────────────────────────────────────────┤
          [3]={GRN},    [4]={IND},   [11]={IND},    [12]={IND},   [19]={IND},   [23]={YEL},
    // Right half
    // ╭─────────────────────────────────────────────────────────────────────────────────╮
         [49]={MAG},   [45]={MAG},   [44]={MAG},   [37]={MAG},   [36]={MAG},   [29]={CYA},
    // ├─────────────────────────────────────────────────────────────────────────────────┤
         [50]={RED},   [46]={BLU},   [43]={BLU},   [38]={RED},   [35]={MAG},   [30]={MAG},
    // ├─────────────────────────────────────────────────────────────────────────────────┤
         [51]={WHI},   [47]={WHI},   [42]={WHI},   [39]={WHI},   [34]={BLU},   [31]={CYA},
    // ├─────────────────────────────────────────────────────────────────────────────────┤
         [52]={GRN},   [48]={GRN},   [41]={BLU},   [40]={BLU},   [33]={GRN},   [32]={GRN},
    // Thumb cluster left and right
    // ╰─────────────────────────────────────────────────────────────────────────────────╯
         [26]={AZU},   [27]={BLU},   [28]={YEL},/**/[53]={WHI},   [54]={AZU},
                       [25]={RED},   [24]={CYA},/**/[55]={CYA},
};

//Macros layer
struct RGB_key layer_2_rgb[56] = {
    // Left half
    // ╭─────────────────────────────────────────────────────────────────────────────────╮
          [0]={CYA},    [7]={GRN},    [8]={GRN},    [15]={GRN},   [16]={GRN},   [20]={GRN},
    // ├─────────────────────────────────────────────────────────────────────────────────┤
          [1]={BLK},    [6]={WHI},    [9]={WHI},    [14]={WHI},   [17]={WHI},   [21]={WHI},
    // ├─────────────────────────────────────────────────────────────────────────────────┤
          [2]={BLU},    [5]={WHI},   [10]={WHI},    [13]={WHI},   [18]={WHI},   [22]={WHI},
    // ├─────────────────────────────────────────────────────────────────────────────────┤
          [3]={GRN},    [4]={WHI},   [11]={WHI},    [12]={WHI},   [19]={WHI},   [23]={RED},
    // Right half
    // ╭─────────────────────────────────────────────────────────────────────────────────╮
         [49]={GRN},   [45]={GRN},   [44]={GRN},   [37]={GRN},   [36]={GRN},   [29]={CYA},
    // ├─────────────────────────────────────────────────────────────────────────────────┤
         [50]={PIN},   [46]={YEL},   [43]={BLU},   [38]={YEL},   [35]={GRN},   [30]={GRN},
    // ├─────────────────────────────────────────────────────────────────────────────────┤
         [51]={PIN},   [47]={BLU},   [42]={BLU},   [39]={BLU},   [34]={WHI},   [31]={WHI},
    // ├─────────────────────────────────────────────────────────────────────────────────┤
         [52]={WHI},   [48]={WHI},   [41]={WHI},   [40]={WHI},   [33]={WHI},   [32]={GRN},
    // Thumb cluster left and right
    // ╰─────────────────────────────────────────────────────────────────────────────────╯
         [26]={AZU},   [27]={BLU},   [28]={YEL},/**/[53]={WHI},   [54]={AZU},
                       [25]={RED},   [24]={CYA},/**/[55]={CYA},
};

// Configuration layer
struct RGB_key layer_3_rgb[56] = {
    // Left half
    // ╭─────────────────────────────────────────────────────────────────────────────────╮
          [0]={CYA},    [7]={MAG},    [8]={MAG},    [15]={MAG},   [16]={MAG},   [20]={MAG},
    // ├─────────────────────────────────────────────────────────────────────────────────┤
          [1]={BLU},    [6]={RED},    [9]={GRN},    [14]={BLU},   [17]={WHI},   [21]={WHI},
    // ├─────────────────────────────────────────────────────────────────────────────────┤
          [2]={RED},    [5]={BLK},   [10]={YEL},    [13]={AZU},   [18]={YEL},   [22]={CYA},
    // ├─────────────────────────────────────────────────────────────────────────────────┤
          [3]={GRN},    [4]={BLK},   [11]={BLK},    [12]={BLU},   [19]={GRN},   [23]={GRN},
    // Right half
    // ╭─────────────────────────────────────────────────────────────────────────────────╮
         [49]={MAG},   [45]={MAG},   [44]={MAG},   [37]={MAG},   [36]={MAG},   [29]={CYA},
    // ├─────────────────────────────────────────────────────────────────────────────────┤
         [50]={BLU},   [46]={MAG},   [43]={CYA},   [38]={WHI},   [35]={MAG},   [30]={MAG},
    // ├─────────────────────────────────────────────────────────────────────────────────┤
         [51]={GRN},   [47]={PIN},   [42]={RED},   [39]={PIN},   [34]={BLK},   [31]={RED},
    // ├─────────────────────────────────────────────────────────────────────────────────┤
         [52]={GRN},   [48]={BLK},   [41]={GRN},   [40]={ORA},   [33]={YEL},   [32]={YEL},
    // Thumb cluster left and right
    // ╰─────────────────────────────────────────────────────────────────────────────────╯
         [26]={AZU},   [27]={BLU},   [28]={YEL},/**/[53]={WHI},   [54]={AZU},
                       [25]={RED},   [24]={CYA},/**/[55]={CYA},
};


//Symbols layer
struct RGB_key layer_4_rgb[56] = {
    // Left half
    // ╭─────────────────────────────────────────────────────────────────────────────────╮
          [0]={BLK},    [7]={BLK},    [8]={BLK},    [15]={BLK},   [16]={BLK},   [20]={BLK},
    // ├─────────────────────────────────────────────────────────────────────────────────┤
          [1]={BLK},    [6]={YEL},    [9]={GRN},    [14]={GRN},   [17]={YEL},   [21]={IND},
    // ├─────────────────────────────────────────────────────────────────────────────────┤
          [2]={BLK},    [5]={PIN},   [10]={BLU},    [13]={BLU},   [18]={AZU},   [22]={AZU},
    // ├─────────────────────────────────────────────────────────────────────────────────┤
          [3]={BLK},    [4]={PIN},   [11]={BLU},    [12]={BLU},   [19]={PIN},   [23]={PIN},
    // Right half
    // ╭─────────────────────────────────────────────────────────────────────────────────╮
         [49]={BLK},   [45]={BLK},   [44]={BLK},   [37]={BLK},   [36]={BLK},   [29]={BLK},
    // ├─────────────────────────────────────────────────────────────────────────────────┤
         [50]={IND},   [46]={PIN},   [43]={GRN},   [38]={GRN},   [35]={PIN},   [30]={BLK},
    // ├─────────────────────────────────────────────────────────────────────────────────┤
         [51]={PIN},   [47]={PIN},   [42]={GRN},   [39]={GRN},   [34]={PIN},   [31]={BLK},
    // ├─────────────────────────────────────────────────────────────────────────────────┤
         [52]={PIN},   [48]={PIN},   [41]={GRN},   [40]={GRN},   [33]={PIN},   [32]={BLK},
    // Thumb cluster left and right
    // ╰─────────────────────────────────────────────────────────────────────────────────╯
         [26]={AZU},   [27]={BLU},   [28]={YEL},/**/[53]={WHI},   [54]={AZU},
                       [25]={RED},   [24]={CYA},/**/[55]={CYA},
};

// helper function to set the color of the RGB Matrix
static bool layer_effect(effect_params_t* params, struct RGB_key rgb_array[]) {
     RGB_MATRIX_USE_LIMITS(led_min, led_max);
     uint8_t value = rgblight_get_val();
     float scale = value / 255.0;

     for (uint8_t i = 0; i < 56; i++) {
          rgb_matrix_set_color(i, rgb_array[i].r * scale, rgb_array[i].g * scale, rgb_array[i].b * scale);
     }
     return rgb_matrix_check_finished_leds(led_max);
}

// layer effect functions
static bool base_effect(effect_params_t* params) {
     return layer_effect(params, base_rgb);
}

static bool layer_1_effect(effect_params_t* params) {
     return layer_effect(params, layer_1_rgb);
}

static bool layer_2_effect(effect_params_t* params) {
     return layer_effect(params, layer_2_rgb);
}

static bool layer_3_effect(effect_params_t* params) {
     return layer_effect(params, layer_3_rgb);
}

static bool layer_4_effect(effect_params_t* params) {
     return layer_effect(params, layer_4_rgb);
}

#endif